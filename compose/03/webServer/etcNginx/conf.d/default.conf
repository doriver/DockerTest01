upstream backend { # 로드밸런싱
    ip_hash;
    server was01:8080;
    server was02:8080;
}

# 서버에서 캐싱
proxy_cache_path /asdcache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
    listen       80;
    server_name  localhost;

  # 공통 헤더 설정
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;   # 클라이언트 실제IP
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   # 필수, 클라이언트IP + 요청이 지나온 프록시 서버의 IP
    proxy_set_header X-Forwarded-Proto $scheme;

    location ~* \.(?:css|js)$ {
        # 캐싱 설정
        proxy_cache my_cache;
        proxy_cache_key "$scheme$proxy_host$request_uri$is_args$args";
        proxy_cache_valid 200 302 10m; # 200과 302 응답 코드에 대해 10분 동안 캐시를 유지
        proxy_cache_valid 404 1m; # 404 응답 코드에 대해 1분 동안 유지

        proxy_pass http://backend;

        add_header X-Cache-Status $upstream_cache_status;  # 응답 헤더에 캐시 상태를 추가
    }

    # 클라이언트에서 캐시하도록
    location ~* \.(?:jpg|jpeg|gif|png|ico)$ {
        proxy_pass http://backend;

        add_header Cache-Control "public";
        expires 2h;
    }

    # 캐시기능 없는 기본location블록을 제일 마지막에 배치
    location / {
        proxy_pass http://backend;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}